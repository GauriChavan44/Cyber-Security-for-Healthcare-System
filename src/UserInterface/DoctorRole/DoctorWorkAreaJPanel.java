/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package UserInterface.DoctorRole;

import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.SecurityOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RequestDoctorWorkRequest;
import Business.WorkQueue.UnusualActivityWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.ReceptionistRole.ViewProfileJPanel;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author Gauri
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private DoctorOrganization doctorOrganization;
    private Enterprise enterprise;
    private UserAccount doctorAccount;
    private EcoSystem system;
    
    private static final Logger logger =Logger.getLogger(DoctorWorkAreaJPanel.class);
    //   Doctor d=null;//= (Doctor) doctorAccount.getPerson();
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization doctorOrganization, Enterprise enterprise,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.doctorOrganization = doctorOrganization;
        this.enterprise = enterprise;
        this.doctorAccount = account;
        this.system=system;
        //      d= (Doctor) doctorAccount.getPerson();
        populateWorkRequestTable();
    }
    
    public void populateWorkRequestTable(){
        DefaultTableModel model = (DefaultTableModel)tblWorkRequest.getModel();
        
        model.setRowCount(0);
        
        
        for(WorkRequest request : doctorOrganization.getWorkQueue().getWorkRequestList()){
            if(request instanceof RequestDoctorWorkRequest){
                Patient p = (Patient) request.getSender().getPerson();
                Object[] row = new Object[7];
                row[0] = request;
                row[1] = p.getId();
                row[2] = p.getFirstName();
                row[3] = p.getLastName();
                row[4] = ((RequestDoctorWorkRequest) request).getProblem();
                row[5] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getFirstName();
                row[6] = request.getStatus();
                model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnDiagnose = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnViewPatient = new javax.swing.JButton();
        btnThreat = new javax.swing.JButton();
        btnViewProfile = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblWorkRequest.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Request", "Patient Id", "First Name", "Last Name", "Symptom", "Receiver", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblWorkRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 88, 612, 164));

        btnDiagnose.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnDiagnose.setText("Diagnose");
        btnDiagnose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagnoseActionPerformed(evt);
            }
        });
        add(btnDiagnose, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 270, 155, 49));

        btnAssign.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 270, 155, 49));

        btnViewPatient.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnViewPatient.setText("View Patient");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });
        add(btnViewPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 355, 155, 49));

        btnThreat.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnThreat.setText("Threat");
        btnThreat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThreatActionPerformed(evt);
            }
        });
        add(btnThreat, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, -1, -1));

        btnViewProfile.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnViewProfile.setText("View Profile");
        btnViewProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProfileActionPerformed(evt);
            }
        });
        add(btnViewProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 355, 155, 49));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("Doctor Work Area");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/4.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDiagnoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagnoseActionPerformed
        // TODO add your handling code here:
        Boolean flag=true;
        int selectedRow=tblWorkRequest.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (RequestDoctorWorkRequest) tblWorkRequest.getValueAt(selectedRow, 0);
        
        // System.out.println("On clicking diagnose : "+request);
        
        if(!request.getStatus().equals("Sent")){
            for(WorkRequest r:doctorAccount.getWorkQueue().getWorkRequestList()){
                if(r.equals(request)){
                    flag=false;
                    break;
                }
                
            }
                if(!flag){

                DiagnosePatientJPanel diagnosePatientJPanel = new DiagnosePatientJPanel(userProcessContainer,enterprise,doctorOrganization,doctorAccount, (RequestDoctorWorkRequest) request,system);
                userProcessContainer.add("diagnosePatientJPanel", diagnosePatientJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Request not matching", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
        }
        else{
            JOptionPane.showMessageDialog(null, "Patient is not assigned to you", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnDiagnoseActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        
        int selectedRow=tblWorkRequest.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (RequestDoctorWorkRequest)tblWorkRequest.getValueAt(selectedRow, 0);
        
        if(request.getStatus().equals("Sent")){
            Patient p =(Patient) request.getSender().getPerson();
            Doctor d= (Doctor) doctorAccount.getPerson();
            d.getPatientList().add(p);
            request.setReceiver(doctorAccount);
            request.setStatus("Pending");
            doctorAccount.getWorkQueue().getWorkRequestList().add(request);
            //     System.out.println("Assigned work req : "+request);
            populateWorkRequestTable();
            logger.info(doctorAccount.getUserName()+" Assigned Request for Patient UserName :"+request.getSender().getUserName());
            JOptionPane.showMessageDialog(null, "Request Assigned", "Information", JOptionPane.INFORMATION_MESSAGE);
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Patient already under review", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        // TODO add your handling code here:
        Doctor d= (Doctor) doctorAccount.getPerson();
        logger.info("Doctor is viewing his Patients");
        DoctorViewsPatientJPanel doctorViewsPatientJPanel = new DoctorViewsPatientJPanel(userProcessContainer,enterprise,doctorAccount,d);
        userProcessContainer.add("doctorViewsPatientJPanel", doctorViewsPatientJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void btnThreatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThreatActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        UnusualActivityWorkRequest workRequest = new UnusualActivityWorkRequest();
        workRequest.setWorkRequestId(system.getIv().getWorkRequestId());
        workRequest.setThreatUser(doctorAccount);
        workRequest.setMessage("Accessing illegal data");
        workRequest.setRequestDate(date);
        workRequest.setStatus("Sent");
        logger.info(doctorAccount.getUserName()+" : User accessed illegal Patient Data");
        
        for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof SecurityOrganization){
                org.getWorkQueue().getWorkRequestList().add(workRequest);
                JOptionPane.showMessageDialog(null, "Threat detected !", "Warning", JOptionPane.WARNING_MESSAGE);
                break;
            }
        }
    }//GEN-LAST:event_btnThreatActionPerformed

    private void btnViewProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProfileActionPerformed
        // TODO add your handling code here:
        logger.info(doctorAccount.getUserName()+" Viewed Profile");
        ViewProfileJPanel viewDoctorProfileJPanel = new ViewProfileJPanel(userProcessContainer,enterprise,doctorAccount);
        userProcessContainer.add("viewDoctorProfileJPanel",viewDoctorProfileJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewProfileActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnDiagnose;
    private javax.swing.JButton btnThreat;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JButton btnViewProfile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables
}

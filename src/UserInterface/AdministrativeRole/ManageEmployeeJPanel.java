/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package UserInterface.AdministrativeRole;

import Business.Checks.CheckString;
import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.PatientOrganization;
import Business.Person.Address;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author Gauri
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {
    
    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    private EcoSystem system;
    
    private static final Logger logger =Logger.getLogger(ManageEmployeeJPanel.class);
    
    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer,OrganizationDirectory organizationDir,EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.organizationDir=organizationDir;
        this.system=system;
        
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
        populateCountryJComboBox();
    }
    public void populateCountryJComboBox(){
        countryJComboBox.removeAllItems();;
        
        countryJComboBox.addItem("USA");
        countryJComboBox.addItem("Canada");
        countryJComboBox.addItem("India");
        countryJComboBox.addItem("China");
    }
    
    public void populateOrganizationComboBox(){
        organizationJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            if(organization instanceof PatientOrganization){
                continue;
            }
            else{
                organizationJComboBox.addItem(organization);
            }
        }
    }
    
    public void populateOrganizationEmpComboBox(){
        organizationEmpJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            if(organization instanceof PatientOrganization){
                continue;
            }
            else{
                organizationEmpJComboBox.addItem(organization);
            }
        }
    }
    
    public void clearTextFields(){
        txtFirstName.setText("");
        txtLastName.setText("");
        txtStreetNo.setText("");
        txtCity.setText("");
        txtState.setText("");
        txtPinCode.setText("");
    }
    
    public void populateSpecializationJComboBox(){
        specializatioJComboBox.removeAllItems();
        
        specializatioJComboBox.addItem("Allergist");
        specializatioJComboBox.addItem("Anesthesiologist");
        specializatioJComboBox.addItem("Dermatologist");
        specializatioJComboBox.addItem("Gynecologist");
        specializatioJComboBox.addItem("Neurologist");
        specializatioJComboBox.addItem("Orthopedist");
        specializatioJComboBox.addItem("Physiatrist");
        specializatioJComboBox.addItem("Pediatrician");
        specializatioJComboBox.addItem("Radiologists");
        specializatioJComboBox.addItem("Rheumatologist");
        
    }
    
    private void populateTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        model.setRowCount(0);
        
        for (Person person : organization.getPersonDirectory().getPersonList()){
            
            Object[] row = new Object[3];
            row[0] = person.getId();
            row[1] = person.getFirstName();
            row[2] = person.getLastName();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtStreetNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPinCode = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        specializatioJComboBox = new javax.swing.JComboBox<>();
        countryJComboBox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setToolTipText("");
        jScrollPane1.setMaximumSize(null);

        organizationJTable.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 528, 140));

        addJButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        addJButton.setText("Create Employee");
        addJButton.setToolTipText("");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, 170, 50));

        organizationJComboBox.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 128, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Organization");
        jLabel1.setToolTipText("");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, -1, -1));

        backJButton.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.setToolTipText("");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("First Name");
        jLabel2.setToolTipText("");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 130, 29));

        txtFirstName.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtFirstName.setToolTipText("");
        txtFirstName.setMaximumSize(null);
        add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 130, -1));

        organizationEmpJComboBox.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        organizationEmpJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationEmpJComboBox.setMaximumSize(null);
        organizationEmpJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationEmpJComboBoxActionPerformed(evt);
            }
        });
        add(organizationEmpJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, 130, 29));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Organization");
        jLabel3.setToolTipText("");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 130, 29));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Last Name");
        jLabel4.setToolTipText("");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 130, 29));

        txtLastName.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtLastName.setToolTipText("");
        txtLastName.setMaximumSize(null);
        add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 130, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Street No.");
        jLabel5.setToolTipText("");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, 130, 29));

        txtStreetNo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtStreetNo.setToolTipText("");
        txtStreetNo.setMaximumSize(null);
        add(txtStreetNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 270, 130, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("City");
        jLabel6.setToolTipText("");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 130, 29));

        txtCity.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtCity.setToolTipText("");
        txtCity.setMaximumSize(null);
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 130, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("State");
        jLabel7.setToolTipText("");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 130, 29));

        txtState.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtState.setToolTipText("");
        txtState.setMaximumSize(null);
        add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 350, 130, -1));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Country");
        jLabel8.setToolTipText("");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 390, 130, 29));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setText("Pincode");
        jLabel9.setToolTipText("");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, 130, 29));

        txtPinCode.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtPinCode.setToolTipText("");
        txtPinCode.setMaximumSize(null);
        add(txtPinCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 430, 130, -1));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel10.setText("Specialization");
        jLabel10.setToolTipText("");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 130, 29));

        specializatioJComboBox.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        specializatioJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        specializatioJComboBox.setToolTipText("");
        specializatioJComboBox.setMaximumSize(null);
        specializatioJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specializatioJComboBoxActionPerformed(evt);
            }
        });
        add(specializatioJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, 130, 29));

        countryJComboBox.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        countryJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryJComboBox.setMaximumSize(null);
        countryJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBoxActionPerformed(evt);
            }
        });
        add(countryJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 390, 130, 29));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("Manage Employee");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/4.png"))); // NOI18N
        jLabel12.setText("jLabel12");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        String firstName=null;
        String lastName=null;
        String street =null;
        String city=null;
        String state=null;
        String country=null;
        int pinCode=0;
        try{
            firstName = txtFirstName.getText();
            lastName = txtLastName.getText();
            street = txtStreetNo.getText();
            city = txtCity.getText();
            state = txtState.getText();
          //  country = txtCountry.getText();
            pinCode = Integer.parseInt(txtPinCode.getText());
            
            Boolean check = CheckString.stringValidation(firstName);
            Boolean check1 = CheckString.stringValidation(lastName);
            Boolean check2 = CheckString.stringValidation(city);
            Boolean check3 = CheckString.stringValidation(state);
          //  Boolean check4 = CheckString.stringValidation(country);
            Boolean check5 = CheckString.IntValidation(pinCode);
            Boolean check6 = CheckString.stringNumericValidation(street);
            
            if(check == true && check1==true && check2==true && check3==true && check5==true && check6==true){
                if(organization instanceof DoctorOrganization){
                    String s = (String) specializatioJComboBox.getSelectedItem();
                    String c=(String) countryJComboBox.getSelectedItem();
                    Doctor d = new Doctor();
                    d.setId(system.getIv().getPersonId());
                    d.setFirstName(firstName);
                    d.setLastName(lastName);
                    d.setSpecialization(s);
                    Address a = new Address(street,city,state,c,pinCode);
                    d.setAddress(a);
                    organization.getPersonDirectory().addPerson(d);
                    logger.info("Employee Created ! First Name : "+d.getFirstName() +" Last Name : "+d.getLastName()+" in Doctor Organization");
                    JOptionPane.showMessageDialog(null, "Employee Created Successfully !", "Information", JOptionPane.INFORMATION_MESSAGE);
                    clearTextFields();
                    return;
                }
                else {
                    Employee e = new Employee();
                    e.setId(system.getIv().getPersonId());
                    e.setFirstName(firstName);
                    e.setLastName(lastName);
                    Address a1 = new Address(street,city,state,country,pinCode);
                    e.setAddress(a1);
                    organization.getPersonDirectory().addPerson(e);
                    logger.info("Employee Created ! First Name : "+e.getFirstName() +" Last Name : "+e.getLastName()+" in Organization : "+organization.getName());
                    JOptionPane.showMessageDialog(null, "Employee Created Successfully !", "Information", JOptionPane.INFORMATION_MESSAGE);
                    clearTextFields();
                    populateOrganizationEmpComboBox();
                    populateCountryJComboBox();
                    return;
                }
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter correct data", "Warning", JOptionPane.WARNING_MESSAGE);
            
        }
        
        
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null){
            populateTable(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationEmpJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        if (organization instanceof DoctorOrganization){
            specializatioJComboBox.setEnabled(true);
            populateSpecializationJComboBox();
        }
        else{
            specializatioJComboBox.setEnabled(false);
        }
    }//GEN-LAST:event_organizationEmpJComboBoxActionPerformed

    private void specializatioJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specializatioJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specializatioJComboBoxActionPerformed

    private void countryJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryJComboBoxActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox<String> countryJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationEmpJComboBox;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JComboBox<String> specializatioJComboBox;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPinCode;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreetNo;
    // End of variables declaration//GEN-END:variables
}
